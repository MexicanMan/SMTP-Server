Autogen Definitions fsm;

method = case;
type   = reentrant;

prefix = server_fsm;

cookie = "int client";
cookie = "void* server";
cookie = "const char* data";
cookie = "int len";

/* Состояния init, invalid и done уже есть */
state  = ready, hello, mail_from, rcpt_to, data, received_data, quit, server_error;
event  = connection_accepted, cmd_helo, cmd_ehlo, cmd_mail, cmd_rcpt, cmd_data, cmd_rset, cmd_vrfy,
    cmd_quit, mail_end, connection_lost;

transition =
{ tst = init;           tev = connection_accepted;  next = ready;           ttype = accepted; };

transition =
{ tst = ready;          tev = cmd_helo;             next = hello;           ttype = helo; },
{ tst = ready;          tev = cmd_ehlo;             next = hello;           ttype = ehlo; },
{ tst = ready;          tev = cmd_vrfy;             next = ready;           ttype = vrfy; },
{ tst = ready;          tev = cmd_rset;             next = ready;           ttype = rset; },
{ tst = ready;          tev = cmd_quit;             next = quit;            ttype = quit; },
{ tst = ready;          tev = connection_lost;      next = done;            ttype = close; };

transition =
{ tst = hello;          tev = cmd_helo;             next = hello;           ttype = helo; },
{ tst = hello;          tev = cmd_ehlo;             next = hello;           ttype = ehlo; },
{ tst = hello;          tev = cmd_mail;             next = mail_from;       ttype = mail; },
{ tst = hello;          tev = cmd_vrfy;             next = hello;           ttype = vrfy; },
{ tst = hello;          tev = cmd_rset;             next = hello;           ttype = rset; },
{ tst = hello;          tev = cmd_quit;             next = quit;            ttype = quit; },
{ tst = hello;          tev = connection_lost;      next = done;            ttype = close; };

transition =
{ tst = mail_from;      tev = cmd_helo;             next = hello;           ttype = helo; },
{ tst = mail_from;      tev = cmd_ehlo;             next = hello;           ttype = ehlo; },
{ tst = mail_from;      tev = cmd_rcpt;             next = rcpt_to;         ttype = rcpt; },
{ tst = mail_from;      tev = cmd_vrfy;             next = mail_from;       ttype = vrfy; },
{ tst = mail_from;      tev = cmd_rset;             next = hello;           ttype = rset; },
{ tst = mail_from;      tev = cmd_quit;             next = quit;            ttype = quit; },
{ tst = mail_from;      tev = connection_lost;      next = done;            ttype = close; };

transition =
{ tst = rcpt_to;        tev = cmd_helo;             next = hello;           ttype = helo; },
{ tst = rcpt_to;        tev = cmd_ehlo;             next = hello;           ttype = ehlo; },
{ tst = rcpt_to;        tev = cmd_rcpt;             next = rcpt_to;         ttype = rcpt; },
{ tst = rcpt_to;        tev = cmd_data;             next = data;            ttype = data; },
{ tst = rcpt_to;        tev = cmd_vrfy;             next = rcpt_to;         ttype = vrfy; },
{ tst = rcpt_to;        tev = cmd_rset;             next = hello;           ttype = rset; },
{ tst = rcpt_to;        tev = cmd_quit;             next = quit;            ttype = quit; },
{ tst = rcpt_to;        tev = connection_lost;      next = done;            ttype = close; };

transition =
{ tst = data;           tev = mail_end;             next = received_data;   ttype = received; },
{ tst = data;           tev = connection_lost;      next = done;            ttype = close; };

transition =

{ tst = received_data;  tev = connection_lost;      next = done;            ttype = close; };

transition =
{ tst = quit;           tev = connection_lost;      next = done;            ttype = close; };